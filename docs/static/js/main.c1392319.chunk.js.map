{"version":3,"sources":["components/AddCategorie.js","helpers/getGifs.js","components/GifItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategorie","setCategories","useState","newCategorie","setNewCategorie","className","onSubmit","e","preventDefault","trim","length","cat","type","placeholder","onChange","target","value","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","image","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"yLAgDeA,EA7CM,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cAGnB,EAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAiBA,OAEI,mCAEI,uBAAMC,UAAU,gBAAgBC,SAfnB,SAACC,GAClBA,EAAEC,iBACCL,EAAaM,OAAOC,OAAS,EAC5BT,GAAc,SAAAU,GAAG,OAAKR,GAAL,mBAAsBQ,OAEvCV,GAAc,SAAAU,GAAG,OAAIA,KAEzBP,EAAgB,KAQZ,UACI,uBACIQ,KAAK,OACLC,YAAY,gBACZC,SAvBK,SAACP,GAClBH,EAAgBG,EAAEQ,OAAOC,QAuBbA,MAAOb,IAGX,wBAAQS,KAAK,SAAb,iC,+BCjCHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,8DAEDI,MAAMF,GAFL,cAEbG,EAFa,gBAGEA,EAAIC,OAHN,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACpB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXF,IAAG,UAAEA,EAAIG,cAAN,aAAE,EAAYC,qBATV,kBAaZN,GAbY,4CAAH,sDCYLO,EAZC,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,GAAID,EAAc,EAAdA,IAAKE,EAAS,EAATA,MAEvB,OACI,mCACI,sBAAKzB,UAAU,6CAAf,UACI,qBAAK6B,IAAKN,EAAIR,IAAKe,IAAKL,IACxB,6BAAKA,MAFwDD,MCmB9DO,EArBC,SAAC,GAAc,IAE3B,ECFwB,SAAClB,GAEzB,MAA0BhB,mBAAS,CAC/BuB,KAAM,GACNY,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WACNvB,EAASC,GACRuB,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLd,KAAMiB,EACNL,SAAS,MAEd,UAER,CAACnB,IAEGoB,EDjBwBM,CAFL,EAAZ1B,UAEFa,EAAZ,EAAON,KAAaY,EAApB,EAAoBA,QAEpB,OACI,qCACKA,GAAW,mBAAGhC,UAAU,kCAAb,yBACX,qBAAKA,UAAU,YAAf,SAEO0B,EAAOJ,KAAI,SAAAkB,GAAK,OACZ,cAAC,EAAD,eAEQA,GADCA,EAAMhB,aEqBxBiB,EAhCM,WAEjB,MAAoC5C,mBAAS,CAAC,UAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAEA,OAEI,qCACI,8CACA,uBAEA,cAAC,EAAD,CAAcA,cAAeA,IAG7B,oBAAII,UAAU,aAAd,SAEQ0C,EAAWpB,KAAI,SAACT,EAAU8B,GACtB,OAAO,6BAAa9B,GAAJ8B,QAMxBD,EAAWpB,KAAI,SAACT,EAAU8B,GACtB,OAAO,cAAC,EAAD,CAAS9B,SAAUA,GAAe8B,U,MCnB7DC,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.c1392319.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategorie = ({setCategories})=>{\r\n\r\n\r\n    const [newCategorie, setNewCategorie] = useState('');\r\n    //events\r\n    const handleChange = (e)=>{\r\n        setNewCategorie(e.target.value);\r\n    }\r\n\r\n    const addCategorie = (e)=>{\r\n        e.preventDefault();\r\n        if(newCategorie.trim().length > 2){\r\n            setCategories(cat => [newCategorie, ...cat]);\r\n        }else{\r\n            setCategories(cat => cat);\r\n        }\r\n        setNewCategorie('');\r\n    }\r\n    \r\n\r\n    return(\r\n\r\n        <>\r\n\r\n            <form className=\"formCategorie\" onSubmit={addCategorie}>\r\n                <input \r\n                    type='text'\r\n                    placeholder='new categorie'\r\n                    onChange={handleChange}\r\n                    value={newCategorie}\r\n                />\r\n\r\n                <button type='submit'>Add Categorie</button>\r\n\r\n            </form>\r\n     \r\n        </>\r\n\r\n    );\r\n}\r\n\r\nAddCategorie.propTypes= {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategorie;","\r\n\r\nexport const getGifs = async (category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=9&api_key=09KzeP3q8ZXynbTvJ87MmF5TBNQREl8d`\r\n    const res = await fetch(url)\r\n    const {data} = await res.json()\r\n    \r\n    const gifs = data.map(img =>{\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                img: img.images?.downsized_medium\r\n            }\r\n        })\r\n\r\n    return gifs;\r\n}","import React from 'react';\r\n\r\nconst GifItem = ({id, img, title})=>{\r\n\r\n    return(\r\n        <>\r\n            <div className=\"gifs animate__animated animate__fadeInLeft\" key={id}>\r\n                <img src={img.url} alt={title}/>\r\n                <h4>{title}</h4>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifItem;","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifItem from './GifItem';\r\n\r\nconst GifGrid = ({category})=>{\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return(\r\n        <>\r\n            {loading && <p className=\"animate_animated animate__flash\">Cargando...</p>}\r\n            {<div className=\"grid_gifs\">\r\n                {\r\n                    images.map(image =>(\r\n                        <GifItem \r\n                            key={image.id}\r\n                            {...image}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifGrid;","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) =>{\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs( category)\r\n        .then(imgs =>{\r\n            setTimeout(()=>{\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            }, 10000)\r\n        })\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","import React, {useState} from 'react';\r\nimport AddCategorie from './AddCategorie';\r\nimport GifGrid from './GifGrid';\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n    const [categories, setCategories] = useState(['memes']);\r\n\r\n    return(\r\n\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr />\r\n\r\n            <AddCategorie setCategories={setCategories}/>\r\n           \r\n            \r\n            <ol className=\"categorias\">\r\n                {\r\n                    categories.map((category, i) => {\r\n                        return <li key={i}>{category}</li>\r\n                    })\r\n                }\r\n            </ol>\r\n\r\n            {\r\n                categories.map((category, i)=>{\r\n                    return <GifGrid category={category} key={i}/>\r\n                })\r\n            }\r\n\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './components/GifExpertApp';\n\n//css\nimport './index.css';\n\n\nReactDOM.render(\n\n  <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}